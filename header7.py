# -*- coding: utf-8 -*-
import binascii
import sys

print ('''
   +------------------------+
   |        HEADER-7        |
   +------------------------+\n''')

if (len(sys.argv) <= 1):
    print ("Usage: header7 <file>")
    print ("You can also drag & drop the file!\n")
    input("Press ENTER to exit... ")
    sys.exit


#HEADERS
dxt1_4K=b'444453207C00000007100A000010000000100000000080000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000040000004458543100000000000000000000000000000000000000000810400000000000000000000000000000000000'
dxt5_4K=b'444453207C00000007100A000010000000100000000000010000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000040000004458543500000000000000000000000000000000000000000810400000000000000000000000000000000000'
ati2_4K=b'444453207C00000007100A000010000000100000000000010000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000040000004154493200000000000000000000000000000000000000000810400000000000000000000000000000000000'
dxt1_2K=b'444453207C00000007100A000008000000080000000020000000000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000040000004458543100000000000000000000000000000000000000000810400000000000000000000000000000000000'
dxt5_2K=b'444453207C00000007100A000008000000080000000040000100000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000040000004458543500000000000000000000000000000000000000000010000000000000000000000000000000000000'
ati2_2K=b'444453207C00000007100A000008000000080000000020000000000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000040000004154493200000000000000000000000000000000000000000810400000000000000000000000000000000000'
dxt1_1K=b'444453207C00000007100200000400000004000000000000000000000B000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000040000004458543100000000000000000000000000000000000000000810400000000000000000000000000000000000'
dxt5_1K=b'444453207C00000007100200000400000004000000000000000000000B000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000040000004458543500000000000000000000000000000000000000000810400000000000000000000000000000000000'
ati2_1K=b'444453207C00000007100200000400000004000000000000000000000B000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000040000004154493200000000000000000000000000000000000000000810400000000000000000000000000000000000'



def writeHeader(header):
    file = open(filename+".dds","wb")
    file.write(binascii.unhexlify(header+h[0x0:]))
    file.close
    sys.exit

file_path = sys.argv[1:]
for p in file_path:
    filename = p.split(".")[0]
    f = open(p, "rb").read()
    h=(binascii.hexlify(f))
    header = binascii.unhexlify(h[0x0:0x80*2])

    if (p.endswith('.dds') or p.endswith('.DDS')):
	    file = open(filename+".ubulk","wb")
	    file.write(binascii.unhexlify(h[0x80*2:]))
	    file.close
	    sys.exit

    else:
        print("\n   SELECT HEADER: \n\n   1) DXT1 4K \n   2) DXT5 4K \n   3) ATI2 4K \n   4) DXT1 2K \n   5) DXT5 2K\n   6) ATI2 2K \n   7) DXT1 1K \n   8) DXT5 1K \n   9) ATI2 1K \n\n")
        header_select = int(input("   Number: "))

        if (header_select == 1):
            writeHeader(dxt1_4K)
        elif (header_select == 2):
            writeHeader(dxt5_4K)
        elif (header_select == 3):
            writeHeader(ati2_4K)
        elif (header_select == 4):
            writeHeader(dxt1_2K)
        elif (header_select == 5):
            writeHeader(dxt5_2K)
        elif (header_select == 6):
            writeHeader(ati2_2K)
        elif (header_select == 7):
            writeHeader(dxt1_1K)
        elif (header_select == 8):
            writeHeader(dxt5_1K)
        elif (header_select == 9):
            writeHeader(ati2_1K)
